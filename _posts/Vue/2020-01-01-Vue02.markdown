---
layout:     post
title:      "Vue.js入门 - 赋值"
subtitle:   ""
date:       2018-01-01 12:00:00
author:     "YaPi"
header-img: ""
tags:
    - Vue
---

### 方法与绑定参数

```
<script type="text/javascript">
var data = { a : 1 };
var vm = new Vue({
	el   : "#app",
	data : data
});

// 监听一个vue应用的参数值的改变
vm.$watch('a', function(newVal, oldVal){
	console.log(newVal, oldVal);
})

// 绑定参数方式1 用vue应用+$参数指定对应的值
vm.$data.a = "test...."
// 绑定参数方式2 直接改变原始对象值
data.a = "test2"
</script>
```
#### 生命周期函数

```
<script type="text/javascript">
var vm = new Vue({
	el : "#app",
	data : {
		msg : "hi vue",
	},
	//在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。
	beforeCreate:function(){
		console.log('beforeCreate');
	},
	/* 在实例创建完成后被立即调用。
	在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch/event 事件回调。
	然而，挂载阶段还没开始，$el 属性目前不可见。 */
	created	:function(){
		console.log('created');
	},
	//在挂载开始之前被调用：相关的渲染函数首次被调用
	beforeMount : function(){
		console.log('beforeMount');

	},
	//el 被新创建的 vm.$el 替换, 挂在成功
	mounted : function(){
		console.log('mounted');

	},
	//数据更新时调用
	beforeUpdate : function(){
		console.log('beforeUpdate');

	},
	//组件 DOM 已经更新, 组件更新完毕
	updated : function(){
		console.log('updated');

	}
});
```

#### 模版方法-插值

```
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title></title>
<script src="vue.js" type="text/javascript" charset="utf-8"></script>
</head>
<body>
<div id="app">
	{{msg}}
	<p>Using mustaches: {{ rawHtml }}</p>
	<p v-html="rawHtml"></p>
	<div v-bind:class="color">test...</div>
	<p>{{ number + 1 }}</p>
	<p>{{ 1 == 1 ? 'YES' : 'NO' }}</p>
	<p>{{ message.split('').reverse().join('') }}</p>
</div>
<script type="text/javascript">
var vm = new Vue({
	el : "#app",
	data : {
		msg : "hi vue",
		rawHtml : '<span style="color:red">this is should be red</span>',
		color:'blue',
		number : 10,
		ok : 1,
		message : "vue"
	}
});
vm.msg = "hi....";
</script>
<style type="text/css">
// 这个地方设置样式属性，以便上面vue应用调用
.red{color:red;}
.blue{color:blue; font-size:100px;}
</style>
</body>
</html>

```